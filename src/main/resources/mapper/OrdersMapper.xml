<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mad.dao.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.trxk.scpww.pojo.Orders">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="train_code" jdbcType="VARCHAR" property="trainCode" />
    <result column="start_station" jdbcType="VARCHAR" property="startStation" />
    <result column="end_station" jdbcType="VARCHAR" property="endStation" />
    <result column="start_time" jdbcType="VARCHAR" property="startTime" />
    <result column="ticket_price" jdbcType="DOUBLE" property="ticketPrice" />
    <result column="ticket_number" jdbcType="INTEGER" property="ticketNumber" />
    <result column="ticket_type" jdbcType="VARCHAR" property="ticketType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="pay_type" jdbcType="INTEGER" property="payType" />
    <result column="order_state" jdbcType="INTEGER" property="orderState" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
  </resultMap>
  <resultMap id="OrdersPassengerResultMap" type="com.trxk.scpww.pojo.Orders" extends="BaseResultMap">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="train_code" jdbcType="VARCHAR" property="trainCode" />
    <result column="start_station" jdbcType="VARCHAR" property="startStation" />
    <result column="end_station" jdbcType="VARCHAR" property="endStation" />
    <result column="start_time" jdbcType="VARCHAR" property="startTime" />
    <result column="ticket_price" jdbcType="DOUBLE" property="ticketPrice" />
    <result column="ticket_number" jdbcType="INTEGER" property="ticketNumber" />
    <result column="ticket_type" jdbcType="VARCHAR" property="ticketType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="pay_type" jdbcType="INTEGER" property="payType" />
    <result column="order_state" jdbcType="INTEGER" property="orderState" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <collection property="passengerList" ofType="com.trxk.scpww.pojo.Orders">
      <id property="id" column="id2"/>
      <result column="name" property="name"/>
      <result column="telephone" property="telephone"/>
      <result column="identity_number" property="identityNumber"/>
      <result column="buy_count" property="buyCount"/>
    </collection>
  </resultMap>
    <sql id="Base_Column_List">
      id, train_code, start_station, end_station, start_time, ticket_price, ticket_number,
      ticket_type, create_time, pay_type, order_state, user_id
    </sql>

  <!--创建订单  插入订单表、插入订单乘客关联表-->
  <insert id="insertOrders" parameterType="com.trxk.scpww.pojo.Orders">
    insert into orders values (#{id},#{trainCode},#{startStation},#{endStation},#{startTime}
    ,#{ticketPrice},#{ticketNumber},#{ticketType},#{createTime},#{payType},#{orderState},#{userId})
  </insert>
  <insert id="insertOrdersPassenger" parameterType="java.util.List">
    insert into order_item (order_id,passenger_id) values
    <foreach collection="list" index="index" item="item" open="" close="" separator=",">
      (#{order_id},#{item})
    </foreach>
  </insert>

    <select id="selectOrderByOrderId" parameterType="java.lang.String" resultMap="BaseResultMap">
      select <include refid="Base_Column_List" />
      from orders
      where id=#{order_id}
    </select>

  <!--pay_type为 2 表示积分支付，order_state为 1 表示订单已支付-->
    <update id="updateOrderByPaySuccess">
      update orders set pay_type = #{pay_type} ,order_state = #{order_state} where orders.id = #{order_id}
    </update>

<!--@Param("startTime")String startTime,@Param("endTime")String endTime
                ,@Param("startStation")String startStation,@Param("endStation")String endStation-->
  <select id="selectOrderBySearch" resultMap="OrdersPassengerResultMap">
    select o.id,o.start_station,o.end_station,o.start_time,o.ticket_price,o.create_time,o.pay_type,o.order_state,o.user_id,
      p.id id2,p.name,p.telephone,p.identity_number
    from orders o join passenger p join order_item item
    on item.order_id = o.id and item.passenger_id = p.id
    <choose>
        <when test="startTime != null">
          and create_time between #{startTime} and #{endTime}
        </when>
        <when test="startStation != null">
          and start_station like #{startStation}
        </when>
        <when test="endStation != null">
          and end_station like #{endStation}
        </when>
      </choose>
  </select>
</mapper>